#include <ctype.h>
#include <string.h>
#include "LCD_1602_RUS.h"

#define NMAX 5
#define LMAX 16

LCD_1602_RUS lcd(0x27, 16, 2);  // LCD 1602

void setup() {
  Serial.begin(9600);
  while (!Serial);
  lcd.init();
  lcd.backlight();
  Serial.println("Laboratory work 4.");
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.clear();
}

void PrintStrings(char mass[][LMAX], int size) {
  Serial.println("\nStrings are:");
  for (int i = 0; i < size; i++) {
    Serial.println(mass[i]);
  }
}

void PrintStrings2(char mass[][LMAX], int size) {
  Serial.println("\nSubstrings with Russian letters or/and digits:");
  for (int i = 0; i < size; i++) {
    if (strlen(mass[i]) > 0) {
      Serial.println(mass[i]);
    }
  }
}

int FindRuAndDigits(char mass[][LMAX], int N, char result[][LMAX]) {
  int m = 0;
  for (int i = 0; i < N; i++) {
    int k = 0;
    int flag = 0;

    for (int j = 0; mass[i][j] != '\0'; j++) {
      if (CheckTask1(mass[i][j])) {
        if (!flag) {
          flag = 1;
        }
        result[m][k++] = mass[i][j];
      } else {
        if (flag) {
          result[m][k] = '\0';
          m++;
          k = 0;
          flag = 0;
        }
      }
    }
    if (flag) {
      result[m][k] = '\0';
      m++;
    }
  }
  return m;
}

int CheckTask1(char symbol) {
  return CheckForRu(symbol) || isdigit(symbol) || symbol == ' ';  // Check if the symbol is Russian or a digit or space
}

int CheckForRu(char symbol) {
  const char a[] = "абвгдеёжзийклмнопрстуфхцчшщьъъэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯ";
  int len = strlen(a);
  for (int i = 0; i < len; i++) {
    if (a[i] == symbol) {
      return 1;
    }
  }
  return 0;
}

int MaxNumOFDigitsTask2(char result[][LMAX], int L) {
  int max = 0, index = -1;
  for (int i = 0; i < L; i++) {
    int count = 0;
    int length = strlen(result[i]);
    for (int j = 0; j < length; j++) {
      if (isdigit(result[i][j])) {
        count++;
      }
    }
    if (count > max) {
      max = count;
      index = i;
    }
  }
  return index;
}

int RemoveEvenDigitsTask3(char *str) {
  int tempIndex = 0;
  int evenfound = 0;

  for (int i = 0; str[i] != '\0'; i++) {
    if (isdigit(str[i]) && (str[i] - '0') % 2 == 0) {
      evenfound = 1;
      continue;
    }
    str[tempIndex++] = str[i];
  }
  str[tempIndex] = '\0';

  return evenfound;
}

void loop() {
  char mass[NMAX][LMAX], result[NMAX][LMAX];
  int n = 0, L = 0, index = 0, i;
  do {
    Serial.println("Enter amount of strings:");
    while (Serial.available() == 0);
    n = Serial.parseInt();
    while (Serial.available()) Serial.read();
  } while (n <= 0 || n >= NMAX);

  // Reading strings from Serial
  for (i = 0; i < n; i++) {
    Serial.print("Enter string ");
    Serial.print(i + 1);
    Serial.println(":");
    while (Serial.available() == 0);
    int j = Serial.readBytesUntil('\n', mass[i], LMAX - 1);
    mass[i][j] = '\0';  // Ensuring null termination
  }

  Serial.println("Entered strings:");
  for (i = 0; i < n; i++) {
    Serial.print("mass[");
    Serial.print(i);
    Serial.print("]: ");
    Serial.print(mass[i]);
    Serial.println();
  }

  L = FindRuAndDigits(mass, n, result);
  if (L > 0) {
    Serial.println("\nSubstrings with Russian letters or/and digits:");
    for (int i = 0; i < L; i++) {
      if (strlen(result[i]) > 0) {
        Serial.print(result[i]);
        Serial.println();

      }
    }
  }
  else {
    Serial.println("There are no substrings with Russian letters/digits");
  }

  index = MaxNumOFDigitsTask2(result, L);
  if (index > -1) {
    

    lcd.setCursor(0, 0);
    lcd.print(result[index]);
    lcd.setCursor(0, 1);
    RemoveEvenDigitsTask3(mass[index]);
    lcd.print(mass[index]);
  } else {
    lcd.print("There are ");
    lcd.setCursor(0, 1);
    lcd.print("no digits");
  }

  delay(1000000);
}
